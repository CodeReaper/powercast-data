name: Update contents

on:
  schedule:
    - cron: '5 0,4,8,12,16,20 * * *'
  workflow_dispatch: {}

env:
  publish-branch: gh-pages

jobs:
  update-energy-price-data:
    runs-on: ubuntu-latest
    name: Update energy price data
    outputs:
      changed: ${{ steps.update-energy-price-data.outputs.changed }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.POWERCASTDEPLOY }}
          ref: ${{ env.publish-branch }}
          path: github-pages

      - shell: bash
        name: Setup configuration
        run: |
          mkdir -p ./github-pages/api/energy-price/ > /dev/null

          sh .github/scripts/data-matrix.sh .config.json ./github-pages/api/energy-price/ | tee configuration.json

      - shell: bash
        name: Pull data
        run: |
          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')

            echo "Pull data for ${ZONE} until ${LATEST}..."
            sh .github/scripts/energy-price-data-pull.sh $ZONE $LATEST > "${ZONE}.generated"
          done

      - shell: bash
        id: update-energy-price-data
        name: Check for new data
        run: |
          echo "::set-output name=changed::false"

          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')
            GENERATED="${ZONE}.generated"

            [ -f "$GENERATED" ] || continue

            NEW=$(sh .github/scripts/data-freshness-file.sh $GENERATED $LATEST)

            echo "Checking data for ${ZONE}:"
            echo " - ${LATEST} - current data"
            echo " - ${NEW} - new data"

            if [ $NEW -gt $LATEST ]; then
              echo "::set-output name=changed::true"
            fi
          done

      - shell: bash
        name: Write data
        if: steps.update-energy-price-data.outputs.changed == 'true'
        run: |
          for GENERATED in *.generated; do
            [ -f "$GENERATED" ] || continue
            ZONE=$(basename $GENERATED .generated)
            echo "Using generated data for ${ZONE}..."
            sh .github/scripts/data-write.sh $GENERATED ./github-pages/api/energy-price/ $ZONE
          done

      - shell: bash
        name: Index data
        if: steps.update-energy-price-data.outputs.changed == 'true'
        run: |
          sh .github/scripts/data-index.sh .config.json ./github-pages/api/energy-price/ /api/energy-price > ./github-pages/api/energy-price/latest.json

      - uses: EndBug/add-and-commit@v9
        name: Publish data
        if: steps.update-energy-price-data.outputs.changed == 'true'
        with:
          cwd: github-pages
          add: api/energy-price/
          push: --set-upstream origin ${{ env.publish-branch }}
          default_author: github_actions
          message: Publish energy price data via workflow

  update-renewables-data:
    runs-on: ubuntu-latest
    needs: update-energy-price-data
    name: Update renewables data
    outputs:
      changed: ${{ steps.update-renewables-data.outputs.changed }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.POWERCASTDEPLOY }}
          ref: ${{ env.publish-branch }}
          path: github-pages

      - shell: bash
        name: Setup configuration
        run: |
          mkdir -p ./github-pages/api/renewables/ > /dev/null

          sh .github/scripts/data-matrix.sh .config.json ./github-pages/api/renewables/ | tee configuration.json

      - shell: bash
        name: Pull data
        run: |
          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')

            echo "Pull data for ${ZONE} until ${LATEST}..."
            sh .github/scripts/renewables-data-pull.sh $ZONE $LATEST > "${ZONE}.generated"
          done

      - shell: bash
        id: update-renewables-data
        name: Check for new data
        run: |
          echo "::set-output name=changed::false"

          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')
            GENERATED="${ZONE}.generated"

            [ -f "$GENERATED" ] || continue

            NEW=$(sh .github/scripts/data-freshness-file.sh $GENERATED $LATEST)

            echo "Checking data for ${ZONE}:"
            echo " - ${LATEST} - current data"
            echo " - ${NEW} - new data"

            if [ $NEW -gt $LATEST ]; then
              echo "::set-output name=changed::true"
            fi
          done

      - shell: bash
        name: Write data
        if: steps.update-renewables-data.outputs.changed == 'true'
        run: |
          for GENERATED in *.generated; do
            [ -f "$GENERATED" ] || continue
            ZONE=$(basename $GENERATED .generated)
            echo "Using generated data for ${ZONE}..."
            sh .github/scripts/data-write.sh $GENERATED ./github-pages/api/renewables/ $ZONE
          done

      - shell: bash
        name: Index data
        if: steps.update-renewables-data.outputs.changed == 'true'
        run: |
          sh .github/scripts/data-index.sh .config.json ./github-pages/api/renewables/ /api/renewables > ./github-pages/api/renewables/latest.json

      - uses: EndBug/add-and-commit@v9
        name: Publish data
        if: steps.update-renewables-data.outputs.changed == 'true'
        with:
          cwd: github-pages
          add: api/renewables/
          push: --set-upstream origin ${{ env.publish-branch }}
          default_author: github_actions
          message: Publish renewables data via workflow

  update-co2-emission-data:
    runs-on: ubuntu-latest
    needs: update-renewables-data
    name: Update CO2 emission data
    outputs:
      changed: ${{ steps.update-co2-emission-data.outputs.changed }}
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.POWERCASTDEPLOY }}
          ref: ${{ env.publish-branch }}
          path: github-pages

      - shell: bash
        name: Setup configuration
        run: |
          mkdir -p ./github-pages/api/emission/co2/ > /dev/null

          sh .github/scripts/data-matrix.sh .config.json ./github-pages/api/emission/co2/ | tee configuration.json

      - shell: bash
        name: Pull data
        run: |
          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')

            echo "Pull data for ${ZONE} until ${LATEST}..."
            sh .github/scripts/co2-emission-data-pull.sh $ZONE $LATEST > "${ZONE}.generated"
          done

      - shell: bash
        id: update-co2-emission-data
        name: Check for new data
        run: |
          echo "::set-output name=changed::false"

          jq -rc '.[]' configuration.json | while read CONFIG; do
            ZONE=$(echo "$CONFIG" | jq -r '.zone')
            LATEST=$(echo "$CONFIG" | jq -r '.latest')
            GENERATED="${ZONE}.generated"

            [ -f "$GENERATED" ] || continue

            NEW=$(sh .github/scripts/data-freshness-file.sh $GENERATED $LATEST)

            echo "Checking data for ${ZONE}:"
            echo " - ${LATEST} - current data"
            echo " - ${NEW} - new data"

            if [ $NEW -gt $LATEST ]; then
              echo "::set-output name=changed::true"
            fi
          done

      - shell: bash
        name: Write data
        if: steps.update-co2-emission-data.outputs.changed == 'true'
        run: |
          for GENERATED in *.generated; do
            [ -f "$GENERATED" ] || continue
            ZONE=$(basename $GENERATED .generated)
            echo "Using generated data for ${ZONE}..."
            sh .github/scripts/data-write.sh $GENERATED ./github-pages/api/emission/co2/ $ZONE
          done

      - shell: bash
        name: Index data
        if: steps.update-co2-emission-data.outputs.changed == 'true'
        run: |
          sh .github/scripts/data-index.sh .config.json ./github-pages/api/emission/co2/ /api/emission/co2 > ./github-pages/api/emission/co2/latest.json

      - uses: EndBug/add-and-commit@v9
        name: Publish data
        if: steps.update-co2-emission-data.outputs.changed == 'true'
        with:
          cwd: github-pages
          add: api/emission/co2/
          push: --set-upstream origin ${{ env.publish-branch }}
          default_author: github_actions
          message: Publish co2 emission data via workflow

  update-energy-price-visualization:
    runs-on: ubuntu-latest
    needs: update-co2-emission-data
    name: Update energy price visualization
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.POWERCASTDEPLOY }}
          ref: ${{ env.publish-branch }}
          path: github-pages

      - shell: bash
        name: Clean up previous visualizations
        run: |
          set -e
          cd ./github-pages/
          ls -Q | grep -v ^\"api\"$ | xargs rm -rf

      - shell: bash
        name: Setup pages configuration
        run: |
          set -e

          cp .github/resources/404.html ./github-pages/

      - shell: bash
        name: Setup redirects
        run: |
          set -e

          cat .github/resources/redirect.html | sed 's|REDIRECT_URL|//codereaper.github.io/powercast-data/energy-price/|g' > ./github-pages/index.html

      - shell: bash
        name: Generate energy price visualization
        run: |
          set -e

          [ -d ./github-pages/api/energy-price/ ] || exit 0

          mkdir -p ./github-pages/energy-price/ 2>/dev/null

          cp .github/resources/energy-price.html ./github-pages/energy-price/index.html

      - uses: EndBug/add-and-commit@v9
        name: Publish graph
        with:
          cwd: github-pages
          add: "['index.html', 'data.js', 'energy-price']"
          push: --set-upstream origin ${{ env.publish-branch }}
          default_author: github_actions
          message: Publish energy price graphs via workflow
